https://leetcode.com/problems/find-right-interval/description/

import java.util.Arrays;
import java.util.HashMap;

public class Trial {
    public static void main(String[] args) {
        int[][] intervals = {{3,4},{2,3},{1,2}};
        System.out.println(Arrays.toString(findRightInterval(intervals)));


    }
    static int[] findRightInterval(int[][] intervals) {
        int n=intervals.length;
        int[] start_time=new int[n];
        int[] ans=new int[n];
        HashMap<Integer,Integer> m=new HashMap<>();
        for (int i = 0; i < n; i++) {
            start_time[i]=intervals[i][0];
            m.put(intervals[i][0],i);
        }
        Arrays.sort(start_time);
        for (int i = 0; i < n; i++) {
            int end=intervals[i][1];
            int l=0;
            int r=n-1;
            int index=-1;
            while (l<=r)
            {
                int mid=l+(r-l)/2;
                if (start_time[mid]>=end)
                {
                    index=mid;
                    r=mid-1;
                }
                else l=mid+1;
            }
            ans[i]=index==-1?-1:m.get(start_time[index]);
        }
        return ans;
    }
}
